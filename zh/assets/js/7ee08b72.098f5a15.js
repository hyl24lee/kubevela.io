(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[31629],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),d=r,v=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(v,i(i({ref:n},c),{},{components:t})):a.createElement(v,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},47034:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var a=t(22122),r=t(19756),o=(t(67294),t(3905)),i={title:"\u5b9e\u8df5\u6848\u4f8b-\u7406\u60f3\u6c7d\u8f66"},p={unversionedId:"case-studies/li-auto-inc",id:"case-studies/li-auto-inc",isDocsHomePage:!1,title:"\u5b9e\u8df5\u6848\u4f8b-\u7406\u60f3\u6c7d\u8f66",description:"\u80cc\u666f",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/case-studies/li-auto-inc.md",sourceDirName:"case-studies",slug:"/case-studies/li-auto-inc",permalink:"/zh/docs/next/case-studies/li-auto-inc",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/case-studies/li-auto-inc.md",version:"current",lastUpdatedBy:"Tianxin Dong",lastUpdatedAt:1629290108,formattedLastUpdatedAt:"2021/8/18",frontMatter:{title:"\u5b9e\u8df5\u6848\u4f8b-\u7406\u60f3\u6c7d\u8f66"}},s=[{value:"\u80cc\u666f",id:"\u80cc\u666f",children:[]},{value:"\u5178\u578b\u573a\u666f\u4ecb\u7ecd",id:"\u5178\u578b\u573a\u666f\u4ecb\u7ecd",children:[]},{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848",children:[]},{value:"\u5e73\u53f0\u7684\u529f\u80fd\u5b9a\u5236",id:"\u5e73\u53f0\u7684\u529f\u80fd\u5b9a\u5236",children:[{value:"1.\u5b9a\u4e49\u7ec4\u4ef6",id:"1\u5b9a\u4e49\u7ec4\u4ef6",children:[]},{value:"2.\u5b9a\u4e49\u8fd0\u7ef4\u7279\u5f81",id:"2\u5b9a\u4e49\u8fd0\u7ef4\u7279\u5f81",children:[]},{value:"3.\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7684\u6b65\u9aa4",id:"3\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7684\u6b65\u9aa4",children:[]},{value:"\u7528\u6237\u4f7f\u7528",id:"\u7528\u6237\u4f7f\u7528",children:[]}]}],l={toc:s};function c(e){var n=e.components,i=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},l,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u80cc\u666f"},"\u80cc\u666f"),(0,o.kt)("p",null,"\u7406\u60f3\u6c7d\u8f66\u540e\u53f0\u670d\u52a1\u91c7\u7528\u7684\u662f\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u867d\u7136\u501f\u52a9 Kubernetes \u8fdb\u884c\u90e8\u7f72\uff0c\u4f46\u8fd0\u7ef4\u5de5\u4f5c\u4f9d\u7136\u5f88\u590d\u6742\u3002\u5e76\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u5e94\u7528\u80fd\u8fd0\u884c\u8d77\u6765\u5e76\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u914d\u5957\u7684db\u5b9e\u4f8b\u4ee5\u53ca redis \u96c6\u7fa4\u652f\u6491\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5e94\u7528\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u5bf9\u4e8e\u90e8\u7f72\u987a\u5e8f\u6709\u6bd4\u8f83\u5f3a\u7684\u8bc9\u6c42\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5e94\u7528\u90e8\u7f72\u6d41\u7a0b\u4e2d\u9700\u8981\u548c\u5916\u56f4\u7cfb\u7edf\uff08\u5982\uff1a\u914d\u7f6e\u4e2d\u5fc3\uff09\u4ea4\u4e92\u3002")),(0,o.kt)("p",null,"\u4e0b\u9762\u4ee5\u4e00\u4e2a\u7406\u60f3\u6c7d\u8f66\u7684\u7ecf\u5178\u573a\u666f\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u501f\u52a9 KubeVela \u5b9e\u73b0\u4ee5\u4e0a\u8bc9\u6c42\u3002"),(0,o.kt)("h2",{id:"\u5178\u578b\u573a\u666f\u4ecb\u7ecd"},"\u5178\u578b\u573a\u666f\u4ecb\u7ecd"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u573a\u666f\u67b6\u6784",src:t(70342).Z})),(0,o.kt)("p",null,"\u8fd9\u91cc\u9762\u5305\u542b\u4e24\u4e2a\u5e94\u7528\uff0c\u5206\u522b\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"base-server")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"proxy-server"),", \u6574\u4f53\u5e94\u7528\u90e8\u7f72\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"base-server \u6210\u529f\u542f\u52a8\uff08\u72b6\u6001 ready\uff09\u540e\u9700\u8981\u5f80\u914d\u7f6e\u4e2d\u5fc3\uff08apollo\uff09\u6ce8\u518c\u4fe1\u606f\u3002"),(0,o.kt)("li",{parentName:"ul"},"base-server \u9700\u8981\u7ed1\u5b9a\u5230 service \u548c ingress \u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002"),(0,o.kt)("li",{parentName:"ul"},"proxy-server \u9700\u8981\u5728 base-server \u6210\u529f\u8fd0\u884c\u540e\u542f\u52a8\uff0c\u5e76\u9700\u8981\u83b7\u53d6\u5230 base-server \u5bf9\u5e94\u7684 service \u7684 clusterIP\u3002"),(0,o.kt)("li",{parentName:"ul"},"proxy-server \u4f9d\u8d56 redis \u4e2d\u95f4\u4ef6\uff0c\u9700\u8981\u5728 redis \u6210\u529f\u8fd0\u884c\u540e\u542f\u52a8\u3002"),(0,o.kt)("li",{parentName:"ul"},"proxy-server \u9700\u8981\u4ece\u914d\u7f6e\u4e2d\u5fc3\uff08apollo\uff09\u8bfb\u53d6 base-server \u7684\u76f8\u5173\u6ce8\u518c\u4fe1\u606f\u3002")),(0,o.kt)("p",null,"\u53ef\u89c1\u6574\u4e2a\u90e8\u7f72\u8fc7\u7a0b\uff0c\u5982\u679c\u4eba\u4e3a\u64cd\u4f5c\uff0c\u4f1a\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u4ee5\u53ca\u5bb9\u6613\u51fa\u9519\u3002\u5728\u501f\u52a9 KubeVela \u540e\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u573a\u666f\u7684\u81ea\u52a8\u5316\u548c\u4e00\u952e\u5f0f\u8fd0\u7ef4\u3002"),(0,o.kt)("h2",{id:"\u89e3\u51b3\u65b9\u6848"},"\u89e3\u51b3\u65b9\u6848"),(0,o.kt)("p",null,"\u5728 KubeVela \u4e0a\uff0c\u4ee5\u4e0a\u8bc9\u6c42\u53ef\u4ee5\u62c6\u89e3\u4e3a\u4ee5\u4e0b KubeVela \u7684\u6a21\u578b\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u7ec4\u4ef6\u90e8\u5206: \u5305\u542b\u4e09\u4e2a\u5206\u522b\u662f base-server \u3001redis \u3001proxy-server\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u8fd0\u7ef4\u7279\u5f81: ingress (\u5305\u62ec service) \u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u8d1f\u8f7d\u5747\u8861\u8fd0\u7ef4\u7279\u5f81\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5de5\u4f5c\u6d41: \u5b9e\u73b0\u7ec4\u4ef6\u6309\u7167\u4f9d\u8d56\u8fdb\u884c\u90e8\u7f72\uff0c\u5e76\u5b9e\u73b0\u548c\u914d\u7f6e\u4e2d\u5fc3\u7684\u4ea4\u4e92\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5e94\u7528\u90e8\u7f72\u8ba1\u5212: \u7406\u60f3\u6c7d\u8f66\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 KubeVela \u7684\u5e94\u7528\u90e8\u7f72\u8ba1\u5212\u5b8c\u6210\u5e94\u7528\u53d1\u5e03\u3002")),(0,o.kt)("p",null,"\u8be6\u7ec6\u8fc7\u7a0b\u5982\u4e0b:"),(0,o.kt)("h2",{id:"\u5e73\u53f0\u7684\u529f\u80fd\u5b9a\u5236"},"\u5e73\u53f0\u7684\u529f\u80fd\u5b9a\u5236"),(0,o.kt)("p",null,"\u7406\u60f3\u6c7d\u8f66\u7684\u5e73\u53f0\u5de5\u7a0b\u5e08\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b8c\u6210\u65b9\u6848\u4e2d\u6240\u6d89\u53ca\u7684\u80fd\u529b\uff0c\u5e76\u5411\u5f00\u53d1\u8005\u7528\u6237\u900f\u51fa\uff08\u901a\u8fc7\u7f16\u5199 definition \u7684\u65b9\u5f0f\u5b9e\u73b0\uff09\u3002"),(0,o.kt)("h3",{id:"1\u5b9a\u4e49\u7ec4\u4ef6"},"1.\u5b9a\u4e49\u7ec4\u4ef6"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u7f16\u5199 base-service \u7684\u7ec4\u4ef6\u5b9a\u4e49\uff0c\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"Deployment")," \u4f5c\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u5411\u7ec8\u7aef\u7528\u6237\u900f\u51fa\u53c2\u6570 ",(0,o.kt)("inlineCode",{parentName:"li"},"image")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"cluster"),"\u3002\u5bf9\u4e8e\u7ec8\u7aef\u7528\u6237\u6765\u8bf4\uff0c\u4e4b\u540e\u5728\u53d1\u5e03\u65f6\u53ea\u9700\u8981\u5173\u6ce8\u955c\u50cf\u4ee5\u53ca\u90e8\u7f72\u7684\u96c6\u7fa4\u540d\u79f0\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7f16\u5199 proxy-service \u7684\u7ec4\u4ef6\u5b9a\u4e49\uff0c\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"argo rollout")," \u4f5c\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u540c\u6837\u5411\u7ec8\u7aef\u7528\u6237\u900f\u51fa\u53c2\u6570 ",(0,o.kt)("inlineCode",{parentName:"li"},"image")," \u548c ",(0,o.kt)("inlineCode",{parentName:"li"},"cluster"),"\u3002")),(0,o.kt)("p",null,"\u5982\u4e0b\u6240\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: base-service\nspec:\n  workload:\n    definition:\n      apiVersion: apps/v1\n      kind: Deployment\n  schematic:\n    kube:\n      template:\n        apiVersion: apps/v1\n        kind: Deployment\n        metadata:\n          labels:\n            appId: BASE-SERVICE\n            appName: base-service\n            version: 0.0.1\n          name: base-service\n        spec:\n          replicas: 2\n          revisionHistoryLimit: 5\n          selector:\n            matchLabels:\n              app: base-service\n          template:\n            metadata:\n              labels:\n                antiAffinity: none\n                app: base-service\n                appId: BASE-SERVICE\n                version: 0.0.1\n            spec:\n              affinity:\n                podAntiAffinity:\n                  preferredDuringSchedulingIgnoredDuringExecution:\n                    - podAffinityTerm:\n                        labelSelector:\n                          matchExpressions:\n                            - key: app\n                              operator: In\n                              values:\n                                - base-service\n                            - key: antiAffinity\n                              operator: In\n                              values:\n                                - none\n                        topologyKey: kubernetes.io/hostname\n                      weight: 100\n              containers:\n                - env:\n                    - name: NODE_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.hostIP\n                    - name: POD_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.podIP\n                    - name: POD_NAME\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: metadata.name\n                    - name: POD_NAMESPACE\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: metadata.namespace\n                    - name: APP_NAME\n                      value: base-service\n                    - name: LOG_BASE\n                      value: /data/log\n                    - name: RUNTIME_CLUSTER\n                      value: default\n                  image: base-service\n                  imagePullPolicy: Always\n                  name: base-service\n                  ports:\n                    - containerPort: 11223\n                      protocol: TCP\n                    - containerPort: 11224\n                      protocol: TCP\n                  volumeMounts:\n                    - mountPath: /tmp/data/log/base-service\n                      name: log-volume\n                    - mountPath: /data\n                      name: sidecar-sre\n                    - mountPath: /app/skywalking\n                      name: skywalking\n              initContainers:\n                - args:\n                    - \'echo "do something" \'\n                  command:\n                    - /bin/sh\n                    - -c\n                  env:\n                    - name: NODE_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.hostIP\n                    - name: POD_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.podIP\n                    - name: APP_NAME\n                      value: base-service\n                  image: busybox\n                  imagePullPolicy: Always\n                  name: sidecar-sre\n                  resources:\n                    limits:\n                      cpu: 100m\n                      memory: 100Mi\n                  volumeMounts:\n                    - mountPath: /tmp/data/log/base-service\n                      name: log-volume\n                    - mountPath: /scratch\n                      name: sidecar-sre\n              terminationGracePeriodSeconds: 120\n              volumes:\n                - hostPath:\n                    path: /logs/dev/base-service\n                    type: DirectoryOrCreate\n                  name: log-volume\n                - emptyDir: {}\n                  name: sidecar-sre\n                - emptyDir: {}\n                  name: skywalking\n      parameters:\n        - name: image\n          required: true\n          type: string\n          fieldPaths:\n            - "spec.template.spec.containers[0].image"\n        - name: cluster\n          required: true\n          type: string\n          fieldPaths:\n            - "spec.template.spec.containers[0].env[6].value"\n            - "spec.template.metadata.labels.cluster"\n---\napiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: proxy-service\nspec:\n  workload:\n    definition:\n      apiVersion: argoproj.io/v1alpha1\n      kind: Rollout\n  schematic:\n    kube:\n      template:\n        apiVersion: argoproj.io/v1alpha1\n        kind: Rollout\n        metadata:\n          labels:\n            appId: PROXY-SERVICE\n            appName: proxy-service\n            version: 0.0.0\n          name: proxy-service\n        spec:\n          replicas: 1\n          revisionHistoryLimit: 1\n          selector:\n            matchLabels:\n              app: proxy-service\n          strategy:\n            canary:\n              steps:\n                - setWeight: 50\n                - pause: {}\n          template:\n            metadata:\n              labels:\n                app: proxy-service\n                appId: PROXY-SERVICE\n                cluster: default\n                version: 0.0.1\n            spec:\n              affinity:\n                podAntiAffinity:\n                  preferredDuringSchedulingIgnoredDuringExecution:\n                    - podAffinityTerm:\n                        labelSelector:\n                          matchExpressions:\n                            - key: app\n                              operator: In\n                              values:\n                                - proxy-service\n                        topologyKey: kubernetes.io/hostname\n                      weight: 100\n              containers:\n                - env:\n                    - name: NODE_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.hostIP\n                    - name: POD_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.podIP\n                    - name: POD_NAME\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: metadata.name\n                    - name: POD_NAMESPACE\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: metadata.namespace\n                    - name: APP_NAME\n                      value: proxy-service\n                    - name: LOG_BASE\n                      value: /app/data/log\n                    - name: RUNTIME_CLUSTER\n                      value: default\n                  image: proxy-service:0.1\n                  imagePullPolicy: Always\n                  name: proxy-service\n                  ports:\n                    - containerPort: 11024\n                      protocol: TCP\n                    - containerPort: 11025\n                      protocol: TCP\n                  volumeMounts:\n                    - mountPath: /tmp/data/log/proxy-service\n                      name: log-volume\n                    - mountPath: /app/data\n                      name: sidecar-sre\n                    - mountPath: /app/skywalking\n                      name: skywalking\n              initContainers:\n                - args:\n                    - \'echo "do something" \'\n                  command:\n                    - /bin/sh\n                    - -c\n                  env:\n                    - name: NODE_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.hostIP\n                    - name: POD_IP\n                      valueFrom:\n                        fieldRef:\n                          fieldPath: status.podIP\n                    - name: APP_NAME\n                      value: proxy-service\n                  image: busybox\n                  imagePullPolicy: Always\n                  name: sidecar-sre\n                  resources:\n                    limits:\n                      cpu: 100m\n                      memory: 100Mi\n                  volumeMounts:\n                    - mountPath: /tmp/data/log/proxy-service\n                      name: log-volume\n                    - mountPath: /scratch\n                      name: sidecar-sre\n              terminationGracePeriodSeconds: 120\n              volumes:\n                - hostPath:\n                    path: /app/logs/dev/proxy-service\n                    type: DirectoryOrCreate\n                  name: log-volume\n                - emptyDir: {}\n                  name: sidecar-sre\n                - emptyDir: {}\n                  name: skywalking\n      parameters:\n        - name: image\n          required: true\n          type: string\n          fieldPaths:\n            - "spec.template.spec.containers[0].image"\n        - name: cluster\n          required: true\n          type: string\n          fieldPaths:\n            - "spec.template.spec.containers[0].env[5].value"\n            - "spec.template.metadata.labels.cluster"\n')),(0,o.kt)("h3",{id:"2\u5b9a\u4e49\u8fd0\u7ef4\u7279\u5f81"},"2.\u5b9a\u4e49\u8fd0\u7ef4\u7279\u5f81"),(0,o.kt)("p",null,"\u7f16\u5199\u7528\u4e8e\u8d1f\u8f7d\u5747\u8861\u7684\u8fd0\u7ef4\u7279\u5f81\u7684\u5b9a\u4e49\uff0c\u5176\u901a\u8fc7\u751f\u6210 Kubernetes \u4e2d\u7684\u539f\u751f\u8d44\u6e90 ",(0,o.kt)("inlineCode",{parentName:"p"},"Service")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"Ingress")," \u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002"),(0,o.kt)("p",null,"\u5411\u7ec8\u7aef\u7528\u6237\u900f\u51fa\u7684\u53c2\u6570\u5305\u62ec domain \u548c http \uff0c\u5176\u4e2d domain \u53ef\u4ee5\u6307\u5b9a\u57df\u540d\uff0chttp \u7528\u6765\u8bbe\u5b9a\u8def\u7531\uff0c\u5177\u4f53\u5c06\u90e8\u7f72\u670d\u52a1\u7684\u7aef\u53e3\u6620\u5c04\u4e3a\u4e0d\u540c\u7684 url path\u3002"),(0,o.kt)("p",null,"\u5982\u4e0b\u6240\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: core.oam.dev/v1beta1\nkind: TraitDefinition\nmetadata:\n  name: ingress\nspec:\n  schematic:\n    cue:\n      template: |\n        parameter: {\n          domain: string\n          http: [string]: int\n        }\n        outputs: {\n          "service": {\n            apiVersion: "v1"\n            kind: "Service"\n            metadata: {\n              name: context.name\n              namespace: context.namespace\n            }\n            spec: {\n              selector: app: context.name\n              ports: [for ph, pt in parameter.http{\n                protocol: "TCP"\n                port: pt\n                targetPort: pt\n              }]\n            }\n          }\n          "ingress": {\n            apiVersion: "networking.k8s.io/v1"\n            kind: "Ingress"\n            metadata: {\n              name: "\\(context.name)-ingress"\n              namespace: context.namespace\n            }\n            spec: rules: [{\n              host: parameter.domain\n              http: paths: [for ph, pt in parameter.http {\n                  path: ph\n                  pathType: "Prefix"\n                  backend: service: {\n                      name: context.name\n                      port: number: pt\n                  }\n              }]\n            }]\n           }\n        }\n')),(0,o.kt)("h3",{id:"3\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7684\u6b65\u9aa4"},"3.\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7684\u6b65\u9aa4"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5b9a\u4e49 apply-base \u5de5\u4f5c\u6d41\u6b65\u9aa4: \u5b8c\u6210\u90e8\u7f72 base-server\uff0c\u7b49\u5f85\u7ec4\u4ef6\u6210\u529f\u542f\u52a8\u540e\uff0c\u5f80\u6ce8\u518c\u4e2d\u5fc3\u6ce8\u518c\u4fe1\u606f\u3002\u900f\u51fa\u53c2\u6570\u4e3a component\uff0c\u7ec8\u7aef\u7528\u6237\u5728\u6d41\u6c34\u7ebf\u4e2d\u4f7f\u7528\u6b65\u9aa4 apply-base \u65f6\u53ea\u9700\u8981\u6307\u5b9a\u7ec4\u4ef6\u540d\u79f0\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5b9a\u4e49 apply-helm \u5de5\u4f5c\u6d41\u6b65\u9aa4: \u5b8c\u6210\u90e8\u7f72 redis helm chart\uff0c\u5e76\u7b49\u5f85 redis \u6210\u529f\u542f\u52a8\u3002\u900f\u51fa\u53c2\u6570\u4e3a component\uff0c\u7ec8\u7aef\u7528\u6237\u5728\u6d41\u6c34\u7ebf\u4e2d\u4f7f\u7528\u6b65\u9aa4 apply-helm \u65f6\u53ea\u9700\u8981\u6307\u5b9a\u7ec4\u4ef6\u540d\u79f0\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5b9a\u4e49 apply-proxy \u5de5\u4f5c\u6d41\u6b65\u9aa4: \u5b8c\u6210\u90e8\u7f72 proxy-server\uff0c\u5e76\u7b49\u5f85\u7ec4\u4ef6\u6210\u529f\u542f\u52a8\u3002\u900f\u51fa\u53c2\u6570\u4e3a component \u548c backendIP\uff0c\u5176\u4e2d component \u4e3a\u7ec4\u4ef6\u540d\u79f0\uff0cbackendIP \u4e3a proxy-server \u670d\u52a1\u4f9d\u8d56\u7ec4\u4ef6\u7684 IP\u3002")),(0,o.kt)("p",null,"\u5982\u4e0b\u6240\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: apply-base\n  namespace: vela-system\nspec:\n  schematic:\n    cue:\n      template: |-\n        import ("vela/op")\n        parameter: {\n           component: string\n        }\n        apply: op.#ApplyComponent & {\n           component: parameter.component\n        }\n\n        // \u7b49\u5f85 deployment \u53ef\u7528\n        wait: op.#ConditionalWait & {\n           continue: apply.workload.status.readyReplicas == apply.workload.status.replicas && apply.workload.status.observedGeneration == apply.workload.metadata.generation\n        }\n        \n         message: {...}\n        // \u5f80\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3apollo\u5199\u914d\u7f6e\n        notify: op.#HTTPPost & {\n           url: "appolo-address"\n           request: body: json.Marshal(message)\n        }\n\n        // \u66b4\u9732 service \u7684 ClusterIP\n        clusterIP: apply.traits["service"].value.spec.clusterIP\n---\napiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: apply-helm\n  namespace: vela-system\nspec:\n  schematic:\n    cue:\n      template: |-\n        import ("vela/op")\n        parameter: {\n           component: string\n        }\n        apply: op.#ApplyComponent & {\n           component: parameter.component\n        }\n\n        chart: op.#Read & {\n           value: {\n                // redis \u7684\u5143\u6570\u636e\n                ...\n           }\n        }\n        // \u7b49\u5f85 redis \u53ef\u7528\n        wait: op.#ConditionalWait & {\n           // todo\n           continue: chart.value.status.phase=="ready"\n        }\n---\napiVersion: core.oam.dev/v1beta1\nkind: WorkflowStepDefinition\nmetadata:\n  name: apply-proxy\n  namespace: vela-system\nspec:\n  schematic:\n    cue:\n      template: |-\n        import (\n           "vela/op"\n           "encoding/json"\n        )\n        parameter: {\n           component: string\n           backendIP: string\n        }\n\n        // \u5f80\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3apollo\u8bfb\u53d6\u914d\u7f6e\n        // config: op.#HTTPGet\n\n        apply: op.#ApplyComponent & {\n           component: parameter.component\n           // \u7ed9\u73af\u5883\u53d8\u91cf\u4e2d\u6ce8\u5165BackendIP\n           workload: patch: spec: template: spec: {\n             containers: [{\n                // patchKey=name\n                env: [{name: "BackendIP",value: parameter.backendIP}]\n             },...]\n           }\n        }\n\n        // \u7b49\u5f85 argo.rollout \u53ef\u7528\n        wait: op.#ConditionalWait & {\n           continue: apply.workload.status.readyReplicas == apply.workload.status.replicas && apply.workload.status.observedGeneration == apply.workload.metadata.generation\n        }      \n')),(0,o.kt)("h3",{id:"\u7528\u6237\u4f7f\u7528"},"\u7528\u6237\u4f7f\u7528"),(0,o.kt)("p",null,"\u7406\u60f3\u6c7d\u8f66\u7684\u5f00\u53d1\u5de5\u7a0b\u5e08\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u4f7f\u7528 Application \u5b8c\u6210\u5e94\u7528\u7684\u53d1\u5e03\u3002"),(0,o.kt)("p",null,"\u5f00\u53d1\u5de5\u7a0b\u5e08\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5982\u4e0a\u5e73\u53f0\u5de5\u7a0b\u5e08\u5728 KubeVela \u4e0a\u5b9a\u5236\u7684\u901a\u7528\u80fd\u529b\uff0c\u8f7b\u677e\u5b8c\u6210\u5e94\u7528\u90e8\u7f72\u8ba1\u5212\u7684\u7f16\u5199\u3002"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u5728\u4e0b\u9762\u4f8b\u5b50\u4e2d\u901a\u8fc7 workflow \u7684\u6570\u636e\u4f20\u9012\u673a\u5236 input/output\uff0c\u5c06 base-server \u7684 clusterIP \u4f20\u9012\u7ed9 proxy-server\u3002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: lixiang-app\nspec:\n  components:\n    - name: base-service\n      type: base-service\n      properties:\n        image: nginx:1.14.2\n        # \u7528\u4e8e\u533a\u5206appollo\u73af\u5883\n        cluster: default\n      traits:\n      - type: ingress\n        properties:\n            domain: base-service.dev.example.com\n            http:\n              "/": 11001\n    # redis\u65e0\u4f9d\u8d56\uff0c\u542f\u52a8\u540eservice\u7684endpionts \u9700\u8981\u901a\u8fc7http\u63a5\u53e3\u5199\u5165\u4fe1\u606f\u5199\u5165\u5230apollo\n    - name: "redis"\n      type: helm\n      properties:\n        chart: "redis-cluster"\n        version: "6.2.7"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        repoType: helm\n    - name: proxy-service\n      type: proxy-service\n      properties:\n          image: nginx:1.14.2\n          # \u7528\u4e8e\u533a\u5206appollo\u73af\u5883\n          cluster: default\n      traits:\n      - type: ingress\n        properties:\n            domain: proxy-service.dev.example.com\n            http:\n              "/": 11002\n  workflow:\n    steps:\n      - name: apply-base-service\n        type: apply-base\n        outputs:\n        - name: baseIP\n          exportKey: clusterIP\n        properties:\n          component: base-service\n      - name: apply-redis\n        type: apply-helm\n        properties:\n          component: redis\n      - name: apply-proxy-service\n        type: apply-proxy\n        inputs:\n        - from: baseIP\n          parameterKey: backendIP\n        properties:\n          component: proxy-service\n')))}c.isMDXComponent=!0},70342:function(e,n,t){"use strict";n.Z=t.p+"assets/images/li-auto-inc-7d1543d837036cdcafdcffab90bcc38a.jpg"}}]);