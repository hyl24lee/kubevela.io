(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[97251],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),i=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=i(t),d=r,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<l;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},45043:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=t(22122),r=t(19756),l=(t(67294),t(3905)),o={title:"Dependency and Data Passing"},s={unversionedId:"end-user/workflow/component-dependency-parameter",id:"end-user/workflow/component-dependency-parameter",isDocsHomePage:!1,title:"Dependency and Data Passing",description:"This section will introduce the dependencies in components and how to pass data between components.",source:"@site/docs/end-user/workflow/component-dependency-parameter.md",sourceDirName:"end-user/workflow",slug:"/end-user/workflow/component-dependency-parameter",permalink:"/docs/next/end-user/workflow/component-dependency-parameter",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/workflow/component-dependency-parameter.md",version:"current",lastUpdatedBy:"Tianxin Dong",lastUpdatedAt:1634187297,formattedLastUpdatedAt:"10/14/2021",frontMatter:{title:"Dependency and Data Passing"},sidebar:"docs",previous:{title:"Webhook Notification",permalink:"/docs/next/end-user/workflow/webhook-notification"},next:{title:"Multi-Cluster App Delivery",permalink:"/docs/next/case-studies/multi-cluster"}},p=[{value:"Dependency",id:"dependency",children:[{value:"How to use",id:"how-to-use",children:[]},{value:"Expected Outcome",id:"expected-outcome",children:[]}]},{value:"Inputs and Outputs",id:"inputs-and-outputs",children:[{value:"Outputs",id:"outputs",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"How to use",id:"how-to-use-1",children:[]},{value:"Expected Outcome",id:"expected-outcome-1",children:[]}]}],i={toc:p};function u(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This section will introduce the dependencies in components and how to pass data between components."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"We use helm in the examples, make sure you enable the fluxcd addon:"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"vela addon enable fluxcd\n"))),(0,l.kt)("h2",{id:"dependency"},"Dependency"),(0,l.kt)("p",null,"We can use ",(0,l.kt)("inlineCode",{parentName:"p"},"dependsOn")," to specify the dependencies between components."),(0,l.kt)("p",null,"For example, component A depends on component B:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"...\ncomponents:\n  - name: A\n    type: helm\n    dependsOn:\n      - B\n  - name: B\n    type: helm\n")),(0,l.kt)("p",null,"In this case, KubeVela will deploy B first, and then deploy A when the component B is running."),(0,l.kt)("h3",{id:"how-to-use"},"How to use"),(0,l.kt)("p",null,"If we want to apply a MySQL cluster, we need:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Apply a secret for MySQL password."),(0,l.kt)("li",{parentName:"ol"},"Apply MySQL controller."),(0,l.kt)("li",{parentName:"ol"},"Apply MySQL cluster.")),(0,l.kt)("p",null,"Apply the following file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: mysql\n  namespace: default\nspec:\n  components:\n    - name: mysql-secret\n      type: raw\n      properties:\n        apiVersion: v1\n        kind: Secret\n        metadata:\n          name: mysql-secret\n        type: kubernetes.io/opaque\n        stringData:\n          ROOT_PASSWORD: test\n    - name: mysql-controller\n      type: helm\n      properties:\n        repoType: helm\n        url: https://presslabs.github.io/charts\n        chart: mysql-operator\n        version: "0.4.0"\n    - name: mysql-cluster\n      type: raw\n      dependsOn:\n        - mysql-controller\n        - mysql-secret\n      properties:\n        apiVersion: mysql.presslabs.org/v1alpha1\n        kind: MysqlCluster\n        metadata:\n          name: mysql-cluster\n        spec:\n          replicas: 1\n          secretName: mysql-secret\n')),(0,l.kt)("h3",{id:"expected-outcome"},"Expected Outcome"),(0,l.kt)("p",null,"Check the application in the cluster:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ vela ls\nAPP     COMPONENT           TYPE    TRAITS  PHASE           HEALTHY STATUS  CREATED-TIME\nmysql   mysql-secret        raw             runningWorkflow                 2021-10-14 12:09:55 +0800 CST\n\u251c\u2500  mysql-controller    helm            runningWorkflow                 2021-10-14 12:09:55 +0800 CST\n\u2514\u2500  mysql-cluster       raw             runningWorkflow                 2021-10-14 12:09:55 +0800 CST\n")),(0,l.kt)("p",null,"In the beginning, the status is running workflow since the mysql-controller is not ready."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ vela ls\nAPP     COMPONENT           TYPE    TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME\nmysql   mysql-secret        raw             running healthy         2021-10-14 12:09:55 +0800 CST\n\u251c\u2500  mysql-controller    helm            running healthy         2021-10-14 12:09:55 +0800 CST\n\u2514\u2500  mysql-cluster       raw             running                 2021-10-14 12:09:55 +0800 CST\n")),(0,l.kt)("p",null,"After a while, all components is running successfully. The ",(0,l.kt)("inlineCode",{parentName:"p"},"mysql-cluster")," will be deployed after ",(0,l.kt)("inlineCode",{parentName:"p"},"mysql-controller")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"mysql-secret")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"healthy"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"dependsOn")," use ",(0,l.kt)("inlineCode",{parentName:"p"},"healthy")," to check status. If the component is ",(0,l.kt)("inlineCode",{parentName:"p"},"healthy"),", then KubeVela will deploy the next component.\nIf you want to customize the healthy status of the component, please refer to ",(0,l.kt)("a",{parentName:"p",href:"../../platform-engineers/traits/status"},"Status Write Back"))),(0,l.kt)("h2",{id:"inputs-and-outputs"},"Inputs and Outputs"),(0,l.kt)("p",null,"In KubeVela, we can use inputs and outputs in Components to pass data."),(0,l.kt)("h3",{id:"outputs"},"Outputs"),(0,l.kt)("p",null,"Outputs is made of ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"valueFrom"),". Input will use ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," to reference output."),(0,l.kt)("p",null,"We can write ",(0,l.kt)("inlineCode",{parentName:"p"},"valueFrom")," in the following ways:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Fill string value in the field, eg. ",(0,l.kt)("inlineCode",{parentName:"li"},"valueFrom: testString"),"."),(0,l.kt)("li",{parentName:"ol"},"Use expression, eg. ",(0,l.kt)("inlineCode",{parentName:"li"},"valueFrom: output.metadata.name"),". Note that ",(0,l.kt)("inlineCode",{parentName:"li"},"output")," is a built-in field referring to the resource in the component that is rendered and deployed to the cluster."),(0,l.kt)("li",{parentName:"ol"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"+")," to combine above two ways, the computed value will be the result, eg. ",(0,l.kt)("inlineCode",{parentName:"li"},'valueFrom: output.metadata.name + "testString"'),".")),(0,l.kt)("h3",{id:"inputs"},"Inputs"),(0,l.kt)("p",null,"Inputs is made of ",(0,l.kt)("inlineCode",{parentName:"p"},"from")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"parameterKey"),". Input uses ",(0,l.kt)("inlineCode",{parentName:"p"},"from")," to reference output, ",(0,l.kt)("inlineCode",{parentName:"p"},"parameterKey")," is a expression that assigns the value of the input to the corresponding field."),(0,l.kt)("p",null,"eg."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Specify inputs:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"...\n- name: wordpress\n  type: helm\n  inputs:\n    - from: mysql-svc\n      parameterKey: properties.values.externalDatabase.host\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"The field parameterKey specifies the field path of the parameter key in component to be assigned after rendering:")),(0,l.kt)("p",null,"Which means the input value will be passed into the below properties:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"...\n- name: wordpress\n  type: helm\n  properties:\n    values:\n      externalDatabase:\n        host: <input value>\n")),(0,l.kt)("h3",{id:"how-to-use-1"},"How to use"),(0,l.kt)("p",null,"In the following we will apply a WordPress server with the MySQL address passed from a MySQL component:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: wordpress-with-mysql\n  namespace: default\nspec:\n  components:\n    - name: mysql\n      type: helm\n      outputs:\n        # the output is the mysql service address\n        - name: mysql-svc\n          valueFrom: output.metadata.name + ".default.svc.cluster.local"\n      properties:\n        repoType: helm\n        url: https://charts.bitnami.com/bitnami\n        chart: mysql\n        version: "8.8.2"\n        values:\n          auth:\n            rootPassword: mypassword\n    - name: wordpress\n      type: helm\n      inputs:\n        # set the host to mysql service address\n        - from: mysql-svc\n          parameterKey: properties.values.externalDatabase.host\n      properties:\n        repoType: helm\n        url: https://charts.bitnami.com/bitnami\n        chart: wordpress\n        version: "12.0.3"\n        values:\n          mariadb:\n            enabled: false\n          externalDatabase:\n            user: root\n            password: mypassword\n            database: mysql\n            port: 3306\n')),(0,l.kt)("h3",{id:"expected-outcome-1"},"Expected Outcome"),(0,l.kt)("p",null,"Check the application in the cluster:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ vela ls\n\nAPP                     COMPONENT   TYPE    TRAITS  PHASE           HEALTHY STATUS  CREATED-TIME\nwordpress-with-mysql    mysql       helm    running                 healthy         2021-10-12 18:04:10 +0800 CST\n\u2514\u2500                      wordpress   helm    running                 healthy         2021-10-12 18:04:10 +0800 CST\n")),(0,l.kt)("p",null,"The WordPress with MySQL has been successfully applied."))}u.isMDXComponent=!0}}]);