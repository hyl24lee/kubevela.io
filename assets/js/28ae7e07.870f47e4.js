(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[18536],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return k}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),k=a,f=m["".concat(s,".").concat(k)]||m[k]||d[k]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},27186:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i={title:"Webhook Notification"},l={unversionedId:"end-user/workflow/webhook-notification",id:"version-v1.1/end-user/workflow/webhook-notification",isDocsHomePage:!1,title:"Webhook Notification",description:"If we want to be notified before or after deploying an application, KubeVela provides integration with notification webhooks, allowing users to send notifications to DingTalk or Slack.",source:"@site/versioned_docs/version-v1.1/end-user/workflow/webhook-notification.md",sourceDirName:"end-user/workflow",slug:"/end-user/workflow/webhook-notification",permalink:"/docs/end-user/workflow/webhook-notification",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/workflow/webhook-notification.md",version:"v1.1",lastUpdatedBy:"Tianxin Dong",lastUpdatedAt:1634710448,formattedLastUpdatedAt:"10/20/2021",frontMatter:{title:"Webhook Notification"},sidebar:"version-v1.1/docs",previous:{title:"Built-in Steps",permalink:"/docs/end-user/workflow/built-in-workflow-defs"},next:{title:"Dependency and Data Passing",permalink:"/docs/end-user/workflow/component-dependency-parameter"}},s=[{value:"Parameters",id:"parameters",children:[]},{value:"How to use",id:"how-to-use",children:[]},{value:"Expected outcome",id:"expected-outcome",children:[]}],p={toc:s};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If we want to be notified before or after deploying an application, KubeVela provides integration with notification webhooks, allowing users to send notifications to DingTalk or Slack."),(0,o.kt)("p",null,"In this guide, you will learn how to send notifications via ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook-notification")," in workflow."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Make sure the version of KubeVela is ",(0,o.kt)("inlineCode",{parentName:"p"},">=v1.1.6"),".")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its url and message if you want to send Slack messages")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack.url"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Required, the webhook address of Slack, you can choose to fill it in directly or specify it in secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack.url.address"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, directly specify the webhook address of Slack")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack.url.fromSecret.name"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, specify the webhook address of Slack from secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack.url.fromSecret.key"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, specify the webhook address of Slack from secret, the key of the secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"slack.message"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Required, the Slack messages you want to send, please follow ",(0,o.kt)("a",{parentName:"td",href:"https://api.slack.com/reference/messaging/payload"},"Slack messaging"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its url and message if you want to send DingTalk messages")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding.url"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Required, the webhook address of DingTalk, you can choose to fill it in directly or specify it in secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding.url.address"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, directly specify the webhook address of DingTalk")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding.url.fromSecret.name"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, specify the webhook address of DingTalk from secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding.url.fromSecret.key"),(0,o.kt)("td",{parentName:"tr",align:"center"},"String"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Optional, specify the webhook address of DingTalk from secret, the key of the secret")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"dingding.message"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Required, the DingTalk messages you want to send, please follow ",(0,o.kt)("a",{parentName:"td",href:"https://developers.dingtalk.com/document/robots/custom-robot-access/title-72m-8ag-pqw"},"DingTalk messaging"))))),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("p",null,"Apply the following ",(0,o.kt)("inlineCode",{parentName:"p"},"Application")," with workflow step type of ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook-notification"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-workflow\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: ingress\n      properties:\n        domain: testsvc.example.com\n        http:\n          /: 8000\n  workflow:\n    steps:\n      - name: dingtalk-message\n        # specify the workflow step type\n        type: webhook-notification\n        properties:\n          dingding:\n            # the DingTalk webhook address, please refer to: https://developers.dingtalk.com/document/robots/custom-robot-access\n            url:\n              address: <your dingding url>\n            # specify the message details\n            message:\n              msgtype: text\n              text:\n                content: Workflow starting...\n      - name: application\n        type: apply-component\n        properties:\n          component: express-server\n        outputs:\n          - from: app-status\n            valueFrom: output.status.conditions[0].message + "\u5de5\u4f5c\u6d41\u8fd0\u884c\u5b8c\u6210"\n      - name: slack-message\n        type: webhook-notification\n        inputs:\n          - name: app-status\n            parameterKey: properties.slack.message.text\n        properties:\n          slack:\n            # the Slack webhook address, please refer to: https://api.slack.com/messaging/webhooks\n            url:\n              fromSecret:\n                name: <the secret name that stores your slack url>\n                key: <the secret key that stores your slack url>\n            # specify the message details, will be filled by the input value\n            # message:\n            #   text: condition message + Workflow ended.\n')),(0,o.kt)("h2",{id:"expected-outcome"},"Expected outcome"),(0,o.kt)("p",null,"we can see that before and after the deployment of the application, the messages can be seen in the corresponding group chat."),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook-notification"),", we can integrate with webhook notifier easily."))}c.isMDXComponent=!0}}]);