(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[91275],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return c},kt:function(){return u}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,v=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return r?t.createElement(v,p(p({ref:n},c),{},{components:r})):t.createElement(v,p({ref:n},c))}));function u(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var l=2;l<o;l++)p[l]=r[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},78132:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return s},default:function(){return c}});var t=r(22122),a=r(19756),o=(r(67294),r(3905)),p={title:"Dry Run"},i={unversionedId:"platform-engineers/debug/dry-run",id:"version-v1.1/platform-engineers/debug/dry-run",isDocsHomePage:!1,title:"Dry Run",description:"Dry run will help you to understand what are the real resources which will to be expanded and deployed",source:"@site/versioned_docs/version-v1.1/platform-engineers/debug/dry-run.md",sourceDirName:"platform-engineers/debug",slug:"/platform-engineers/debug/dry-run",permalink:"/docs/platform-engineers/debug/dry-run",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/platform-engineers/debug/dry-run.md",version:"v1.1",lastUpdatedBy:"yangsoon",lastUpdatedAt:1631690672,formattedLastUpdatedAt:"9/15/2021",frontMatter:{title:"Dry Run"},sidebar:"version-v1.1/docs",previous:{title:"Performance Fine-tuning",permalink:"/docs/platform-engineers/system-operation/performance-finetuning"},next:{title:"Custom Installation",permalink:"/docs/platform-engineers/advanced-install"}},s=[],l={toc:s};function c(e){var n=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Dry run will help you to understand what are the real resources which will to be expanded and deployed\nto the Kubernetes cluster. In other words, it will mock to run the same logic as KubeVela's controller\nand output the results locally."),(0,o.kt)("p",null,"For example, let's dry-run the following application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8000\n      traits:\n        - type: ingress\n          properties:\n            domain: testsvc.example.com\n            http:\n              "/": 8000\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'vela dry-run -f app.yaml\n---\n# Application(vela-app) -- Comopnent(express-server)\n---\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.oam.dev/appRevision: ""\n    app.oam.dev/component: express-server\n    app.oam.dev/name: vela-app\n    workload.oam.dev/type: webservice\nspec:\n  selector:\n    matchLabels:\n      app.oam.dev/component: express-server\n  template:\n    metadata:\n      labels:\n        app.oam.dev/component: express-server\n    spec:\n      containers:\n      - image: crccheck/hello-world\n        name: express-server\n        ports:\n        - containerPort: 8000\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.oam.dev/appRevision: ""\n    app.oam.dev/component: express-server\n    app.oam.dev/name: vela-app\n    trait.oam.dev/resource: service\n    trait.oam.dev/type: ingress\n  name: express-server\nspec:\n  ports:\n  - port: 8000\n    targetPort: 8000\n  selector:\n    app.oam.dev/component: express-server\n\n---\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  labels:\n    app.oam.dev/appRevision: ""\n    app.oam.dev/component: express-server\n    app.oam.dev/name: vela-app\n    trait.oam.dev/resource: ingress\n    trait.oam.dev/type: ingress\n  name: express-server\nspec:\n  rules:\n  - host: testsvc.example.com\n    http:\n      paths:\n      - backend:\n          serviceName: express-server\n          servicePort: 8000\n        path: /\n\n---\n')),(0,o.kt)("p",null,"In this example, the definitions(",(0,o.kt)("inlineCode",{parentName:"p"},"webservice")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ingress"),") which ",(0,o.kt)("inlineCode",{parentName:"p"},"vela-app")," depends on are the built-in\ncomponents and traits of KubeVela. You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"-d "),"or ",(0,o.kt)("inlineCode",{parentName:"p"},"--definitions")," to specify your local definition files."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"-d "),"or ",(0,o.kt)("inlineCode",{parentName:"p"},"--definitions")," permits users to provide capability definitions used in the application from local files.\n",(0,o.kt)("inlineCode",{parentName:"p"},"dry-run")," cmd will prioritize the provided capabilities than the living ones in the cluster."))}c.isMDXComponent=!0}}]);